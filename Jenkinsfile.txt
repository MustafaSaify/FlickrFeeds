#!groovy

pipeline {
agent any

stages {
stage('Checkout') {
steps {
checkout scm
}
}

stage('Running Tests') {
steps {
parallel (
"Unit Tests": {
sh 'echo "Unit Tests"'
sh 'fastlane scan'
},
"UI Automation": {
sh 'echo "UI Automation"'
}
)
}
}

stage('Static Analysis') {
steps {
lane :metrics do
scan(scheme: "[SCHEME]", code_coverage: true, derived_data_path: "./DerivedData", output_directory: "./reports")
slather(cobertura_xml: true, jenkins: true, scheme: "[SCHEME]", build_directory: "./DerivedData", output_directory: "./reports", proj: "./[PROJECT].xcodeproj")
lizard(source_folder: "[SOURCE_FOLDER]", language: "swift", export_type: "xml", report_file: "reports/lizard-report.xml")
swiftlint(output_file: "./reports/swiftlint.txt", ignore_exit_status: true)
sonar
end
}
}

stage('Deploy') {
steps {
sh 'echo "Deploy"'
}
}
}
}
